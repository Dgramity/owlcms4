kind: Service
apiVersion: v1
metadata:
  name: owlcms-frontend
spec:
  selector:
    app: owlcms-frontend
  ports:
  - protocol: TCP
    port: 8080
    nodePort: 30001
  type: NodePort
---
apiVersion: v1
kind: Service
metadata:
  name: postgres
spec:
  selector:
    app: postgres
  ports:
  ports:
  - port: 5432
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    app: postgres
  name: postgres-pv-claim
spec:
  storageClassName: standard
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 20M
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
spec:
  selector:
      matchLabels:
        app: postgres
  replicas: 1
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
      - name: postgres
        image: postgres:12.2
        ports:
        - containerPort: 5432
        env:
        - name: POSTGRES_DB
          value: owlcms_db
        - name: POSTGRES_USER
          value: owlcms
        - name: POSTGRES_PASSWORD
          value: owlcms
        volumeMounts:
          - mountPath: /var/lib/postgresql/data
            name: postgres-pv-claim
      volumes:
      - name: postgres-pv-claim
        persistentVolumeClaim:
          claimName: postgres-pv-claim
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: owlcms-frontend
spec:
  selector:
      matchLabels:
        app: owlcms-frontend
  replicas: 1
  template:
    metadata:
      labels:
        app: owlcms-frontend
    spec:
      containers:
        - name: owlcms-frontend
          image: owlcms:${dockerTag}
          env:
          - name: POSTGRES_DB
            value: owlcms_db
          - name: POSTGRES_HOST
            value: postgres
          - name: POSTGRES_USER
            value: owlcms
          - name: POSTGRES_PASSWORD
            value: owlcms
          imagePullPolicy: Never
          ports:
            - containerPort: 8080
