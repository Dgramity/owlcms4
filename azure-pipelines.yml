trigger:
  - develop
  - master

variables:
  # revision overrides .mvn config; must be unique if BUILD_GOAL is set to deploy.
  REVISION: 4.7.5-alpha17
  # if BUILD_GOAL = 'deploy', the uberjars will be published on bintray.  'package' does not deploy
  # to bintray, so REVISION can be kept for several runs when debugging the installers.
  BUILD_GOAL: package
  MAVEN_CACHE_FOLDER: $(Pipeline.Workspace)/.m2/repository
  MAVEN_OPTS: -Dmaven.repo.local=$(MAVEN_CACHE_FOLDER) -Dmaven.test.skip=true -Drevision=$(REVISION)
  REPO_USER: $(releaseUser)
  REPO_TOKEN: $(releaseToken)
  ${{ if eq(variables['Build.SourceBranchName'], 'develop') }}:
    RELEASE_USER: $(prereleaseUser)
    RELEASE_TOKEN: $(prereleaseUser)
    RELEASE_SUFFIX: -prerelease
  ${{ if eq(variables['Build.SourceBranchName'], 'master') }}:
    RELEASE_USER: $(releaseUser)
    RELEASE_TOKEN: $(releaseToken)
    RELEASE_SUFFIX: ''
  BUILDER_EMAIL: jf@jflamy.dev
  BUILDER_NAME: Jean-Fran√ßois Lamy

jobs:
  # build owlcms uberjar and zip to be used by installer
  - job: BuildOwlcmsUberJar
    condition: eq(1,2)
    pool:
      vmImage: ubuntu-latest
    steps:
      - template: src/main/azure-pipelines/prepare-maven.yaml
      - task: Maven@3
        displayName: build owlcms uberJar and deploy to bintray
        inputs:
          mavenPomFile: pom.xml
          mavenOptions: -Xmx3072m $(MAVEN_OPTS)
          javaHomeOption: JDKVersion
          jdkVersionOption: "1.8"
          jdkArchitectureOption: x64
          publishJUnitResults: true
          testResultsFiles: "**/surefire-reports/TEST-*.xml"
          goals: -P production -pl owlcms -am $(BUILD_GOAL)
      - publish: $(Agent.BuildDirectory)/s/owlcms/target/owlcms.zip
        artifact: OwlcmsZip

  # build publicresults uberjar and zip to be used by installer
  - job: BuildPublicResultsUberJar
    condition: eq(1,2)
    pool:
      vmImage: ubuntu-latest
    steps:
      - template: src/main/azure-pipelines/prepare-maven.yaml
      - task: Maven@3
        displayName: build publicresults uberJar and deploy to bintray
        inputs:
          mavenPomFile: pom.xml
          mavenOptions: -Xmx3072m $(MAVEN_OPTS)
          javaHomeOption: JDKVersion
          jdkVersionOption: "1.8"
          jdkArchitectureOption: x64
          publishJUnitResults: true
          testResultsFiles: "**/surefire-reports/TEST-*.xml"
          goals: -P production -pl publicresults -am $(BUILD_GOAL)
      - publish: $(Agent.BuildDirectory)/s/publicresults/target/publicresults.zip
        artifact: PublicResultsZip

  - job: CreateOwlcmsInstaller
    dependsOn:
      - BuildOwlcmsUberJar
    pool:
      vmImage: windows-latest
    steps:
      - template: src/main/azure-pipelines/prepare-maven.yaml
      - task: Maven@3
        displayName: Create owlcms installer
        inputs:
          mavenPomFile: pom.xml
          mavenOptions: -Xmx3072m $(MAVEN_OPTS)
          javaHomeOption: JDKVersion
          jdkVersionOption: "1.8"
          jdkArchitectureOption: x64
          publishJUnitResults: true
          testResultsFiles: "**/surefire-reports/TEST-*.xml"
          goals: -pl owlcms-windows package
      - publish: $(Agent.BuildDirectory)/s/owlcms-windows/target/owlcms_setup/owlcms_setup.exe
        artifact: OwlcmsSetup

  - job: CreatePublicResultsInstaller
    dependsOn:
      - BuildPublicResultsUberJar
    pool:
      vmImage: ubuntu-latest
    steps:
      - template: src/main/azure-pipelines/prepare-maven.yaml
      - task: Maven@3
        displayName: Create publicresults installer
        inputs:
          mavenPomFile: pom.xml
          mavenOptions: -Xmx3072m $(MAVEN_OPTS)
          javaHomeOption: JDKVersion
          jdkVersionOption: "1.8"
          jdkArchitectureOption: x64
          publishJUnitResults: true
          testResultsFiles: "**/surefire-reports/TEST-*.xml"
          goals: -pl publicresults-windows package
      - publish: $(Agent.BuildDirectory)/s/publicresults-windows/target/publicresults_setup/publicresults_setup.exe
        artifact: PublicResultsSetup

  # push updates to Heroku repo
  - job: ReleaseOwlcmsHeroku
    # dependsOn:
    #   - BuildOwlcmsUberJar
    pool:
      vmImage: ubuntu-latest
    steps:
      - template: src/main/azure-pipelines/prepare-maven.yaml
      - script: |
          cd owlcms-heroku
          git config user.email "$(BUILDER_EMAIL)"
          git config user.name "$(BUILDER_NAME)"
          git checkout $(Build.SourceBranchName)
          git pull
      - task: Maven@3
        displayName: Release Notes Parameter Substitutions
        inputs:
          mavenPomFile: pom.xml
          mavenOptions: -Xmx3072m $(MAVEN_OPTS)
          javaHomeOption: JDKVersion
          jdkVersionOption: "1.8"
          jdkArchitectureOption: x64
          publishJUnitResults: true
          testResultsFiles: "**/surefire-reports/TEST-*.xml"
          goals: -pl owlcms-heroku -Dmaven.test.skip=true package
      - script: |
          cd owlcms-heroku
          # add new files
          git add -A && git commit -m "$(REVISION) heroku" --allow-empty

          # create a tag with the current version number
          git tag $(REVISION) -f -a -m "$(REVISION) owlcms4-heroku"
          
          ## push changes and tag back to upstream master repo
          git push https://${REPO_TOKEN}%@github.com/${REPO_USER}/owlcms4-heroku.git $(Build.SourceBranchName)
          git push https://${REPO_TOKEN}%@github.com/${REPO_USER}/owlcms4-heroku.git $(REVISION) --force

          ## push new version and tag to the release repo
          git push https://${RELEASE_TOKEN}%@github.com/${RELEASE_USER}/owlcms4-heroku${RELEASE_SUFFIX}.git $(Build.SourceBranchName):master --force'
          git push https://${RELEASE_TOKEN}%@github.com/${RELEASE_USER}/owlcms4-heroku${RELEASE_SUFFIX}.git $(REVISION) --force'

  # release the installers to github repositories
  - job: ReleaseInstallers
    dependsOn:
      - CreateOwlcmsInstaller
      - CreatePublicResultsInstaller
    pool:
      vmImage: ubuntu-latest
    steps:
      - checkout: self
      - download: current
        artifact: OwlcmsZip
      - download: current
        artifact: PublicResultsZip
      - download: current
        artifact: OwlcmsSetup
      - download: current
        artifact: PublicResultsSetup
      - task: Maven@3
        displayName: Release Notes Parameter Substitutions
        inputs:
          mavenPomFile: pom.xml
          mavenOptions: -Xmx3072m $(MAVEN_OPTS)
          javaHomeOption: JDKVersion
          jdkVersionOption: "1.8"
          jdkArchitectureOption: x64
          publishJUnitResults: true
          testResultsFiles: "**/surefire-reports/TEST-*.xml"
          goals: package --non-recursive -Dmaven.test.skip=true
      - task: GitHubRelease@0
        inputs:
          ${{ if eq(variables['Build.SourceBranchName'], 'develop') }}:
            gitHubConnection: github.com_jflamy-dev
            repositoryName: jflamy-dev/owlcms4-prerelease
          ${{ if eq(variables['Build.SourceBranchName'], 'master') }}:
            gitHubConnection: jflamy
            repositoryName: owlcms/owlcms4
          action: "create" # Options: create, edit, delete
          #target: $(REVISION) # Required when action == Create || Action == Edit
          tagSource: "manual" # Required when action == Create# Options: auto, manual
          #tagPattern: # Optional
          tag: $(REVISION)
          releaseNotesSource: "file" # Optional. Options: file, input
          releaseNotesFile: $(Build.SourcesDirectory)/ReleaseNotes.md # Optional
          #releaseNotes: # Optional
          assets: |
            $(Pipeline.Workspace)/OwlcmsZip/*
            $(Pipeline.Workspace)/PublicResultsZip/*
            $(Pipeline.Workspace)/OwlcmsSetup/*
            $(Pipeline.Workspace)/PublicResultsSetup/*
          assetUploadMode: "delete" # Optional. Options: delete, replace
          #isDraft: false # Optional
          isPreRelease: true # Optional
          addChangeLog: false # Optional
          #compareWith: 'lastFullRelease' # Required when addChangeLog == True. Options: lastFullRelease, lastRelease, lastReleaseByTag
          #releaseTag: # Required when compareWith == LastReleaseByTag
