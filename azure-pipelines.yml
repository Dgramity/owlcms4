trigger:
  - develop
  - master

variables:
  - group: ReleaseRepoCredentials
  - template: src/main/azure-pipelines/releaseRepoCredentialVariables.yaml
  # revision overrides .mvn config; must be unique if BuildGoal is set to deploy.
  - name: Revision
    value: 4.7.5-alpha17
  # if BuildGoal = 'deploy', the uberjars will be published on bintray.  'package' does not deploy
  # to bintray, so Revision can be kept for several runs when debugging the installers.
  - name: BuildGoal
    value: package
  - name: MavenCacheFolder
    value: $(Pipeline.Workspace)/.m2/repository
  - name: MavenOpts
    value: -Dmaven.repo.local=$(MavenCacheFolder) -Dmaven.test.skip=true -Drevision=$(Revision)
  - name: BUILDER_EMAIL
    value: jf@jflamy.dev
  - name: BUILDER_NAME
    value: Jean-Fran√ßois Lamy

jobs:
  # build owlcms uberjar and zip to be used by installer
  - job: BuildOwlcmsUberJar
    condition: eq(1,2)
    pool:
      vmImage: ubuntu-latest
    steps:
      - template: src/main/azure-pipelines/prepare-maven.yaml
      - task: Maven@3
        displayName: build owlcms uberJar and deploy to bintray
        inputs:
          mavenPomFile: pom.xml
          mavenOptions: -Xmx3072m $(MavenOpts)
          javaHomeOption: JDKVersion
          jdkVersionOption: "1.8"
          jdkArchitectureOption: x64
          publishJUnitResults: true
          testResultsFiles: "**/surefire-reports/TEST-*.xml"
          goals: -P production -pl owlcms -am $(BuildGoal)
      - publish: $(Agent.BuildDirectory)/s/owlcms/target/owlcms.zip
        artifact: OwlcmsZip

  # build publicresults uberjar and zip to be used by installer
  - job: BuildPublicResultsUberJar
    condition: eq(1,2)
    pool:
      vmImage: ubuntu-latest
    steps:
      - template: src/main/azure-pipelines/prepare-maven.yaml
      - task: Maven@3
        displayName: build publicresults uberJar and deploy to bintray
        inputs:
          mavenPomFile: pom.xml
          mavenOptions: -Xmx3072m $(MavenOpts)
          javaHomeOption: JDKVersion
          jdkVersionOption: "1.8"
          jdkArchitectureOption: x64
          publishJUnitResults: true
          testResultsFiles: "**/surefire-reports/TEST-*.xml"
          goals: -P production -pl publicresults -am $(BuildGoal)
      - publish: $(Agent.BuildDirectory)/s/publicresults/target/publicresults.zip
        artifact: PublicResultsZip

  - job: CreateOwlcmsInstaller
    dependsOn:
      - BuildOwlcmsUberJar
    pool:
      vmImage: windows-latest
    steps:
      - template: src/main/azure-pipelines/prepare-maven.yaml
      - task: Maven@3
        displayName: Create owlcms installer
        inputs:
          mavenPomFile: pom.xml
          mavenOptions: -Xmx3072m $(MavenOpts)
          javaHomeOption: JDKVersion
          jdkVersionOption: "1.8"
          jdkArchitectureOption: x64
          publishJUnitResults: true
          testResultsFiles: "**/surefire-reports/TEST-*.xml"
          goals: -pl owlcms-windows package
      - publish: $(Agent.BuildDirectory)/s/owlcms-windows/target/owlcms_setup/owlcms_setup.exe
        artifact: OwlcmsSetup

  - job: CreatePublicResultsInstaller
    dependsOn:
      - BuildPublicResultsUberJar
    pool:
      vmImage: ubuntu-latest
    steps:
      - template: src/main/azure-pipelines/prepare-maven.yaml
      - task: Maven@3
        displayName: Create publicresults installer
        inputs:
          mavenPomFile: pom.xml
          mavenOptions: -Xmx3072m $(MavenOpts)
          javaHomeOption: JDKVersion
          jdkVersionOption: "1.8"
          jdkArchitectureOption: x64
          publishJUnitResults: true
          testResultsFiles: "**/surefire-reports/TEST-*.xml"
          goals: -pl publicresults-windows package
      - publish: $(Agent.BuildDirectory)/s/publicresults-windows/target/publicresults_setup/publicresults_setup.exe
        artifact: PublicResultsSetup

  # push updates to Heroku repo
  - job: ReleaseOwlcmsHeroku
    # dependsOn:
    #   - BuildOwlcmsUberJar
    pool:
      vmImage: ubuntu-latest
    steps:
      - template: src/main/azure-pipelines/prepare-maven.yaml
      - script: |
          cd owlcms-heroku
          git config user.email "${BUILDER_EMAIL}"
          git config user.name "${BUILDER_NAME}"
          git checkout $(Build.SourceBranchName)
          git pull
      - task: Maven@3
        displayName: Release Notes Parameter Substitutions
        inputs:
          mavenPomFile: pom.xml
          mavenOptions: -Xmx3072m $(MavenOpts)
          javaHomeOption: JDKVersion
          jdkVersionOption: "1.8"
          jdkArchitectureOption: x64
          publishJUnitResults: true
          testResultsFiles: "**/surefire-reports/TEST-*.xml"
          goals: -pl owlcms-heroku -Dmaven.test.skip=true package
        env:
          REPO_OWNER: $(REPO_USER)
          H_REPO_NAME: owlcms4-heroku$(RELEASE_SUFFIX)
      - script: |
          set -v
          cat $(Build.SourcesDirectory)/owlcms-heroku/ReleaseNotes.md
          cd owlcms-heroku
          # add new files
          git add -A && git commit -m "$(Revision) heroku" --allow-empty

          # create a tag with the current version number
          # git tag $(Revision) -f -a -m "$(Revision) owlcms-heroku"
          
          ## push changes and tag back to upstream master repo
          git push https://$(REPO_TOKEN)@github.com/$(REPO_USER)/owlcms-heroku.git $(Build.SourceBranchName) --force
          git push https://$(REPO_TOKEN)@github.com/$(REPO_USER)/owlcms-heroku.git $(Revision) --force

          ## push new version and tag to the release repo
          echo https://$(RELEASE_TOKEN)@github.com/$(RELEASE_USER)/owlcms-heroku$(RELEASE_SUFFIX).git | rev
          git push https://$(RELEASE_TOKEN)@github.com/$(RELEASE_USER)/owlcms-heroku$(RELEASE_SUFFIX).git $(Build.SourceBranchName):master --force
          git push https://$(RELEASE_TOKEN)@github.com/$(RELEASE_USER)/owlcms-heroku$(RELEASE_SUFFIX).git $(Revision) --force
      - task: GitHubRelease@0
        inputs:
          ${{ if eq(variables['Build.SourceBranchName'], 'develop') }}:
            gitHubConnection: github.com_jflamy-dev
            repositoryName: $(RELEASE_USER)/owlcms-heroku$(RELEASE_SUFFIX)
            isPreRelease: true
          ${{ if eq(variables['Build.SourceBranchName'], 'master') }}:
            gitHubConnection: jflamy
            repositoryName: $(RELEASE_USER)/owlcms-heroku$(RELEASE_SUFFIX)
            isPreRelease: false
          action: "create" # Options: create, edit, delete
          tagSource: "manual"
          tag: $(Revision)
          assets: ''
          releaseNotesSource: "file"
          releaseNotesFile: $(Build.SourcesDirectory)/owlcms-heroku/ReleaseNotes.md
          addChangeLog: false # Optional

  # release the installers to github repositories
  - job: ReleaseInstallers
    dependsOn:
      - CreateOwlcmsInstaller
      - CreatePublicResultsInstaller
    pool:
      vmImage: ubuntu-latest
    steps:
      - checkout: self
      - download: current
        artifact: OwlcmsZip
      - download: current
        artifact: PublicResultsZip
      - download: current
        artifact: OwlcmsSetup
      - download: current
        artifact: PublicResultsSetup
      - task: Maven@3
        displayName: Release Notes Parameter Substitutions
        inputs:
          mavenPomFile: pom.xml
          mavenOptions: -Xmx3072m $(MavenOpts)
          javaHomeOption: JDKVersion
          jdkVersionOption: "1.8"
          jdkArchitectureOption: x64
          publishJUnitResults: true
          testResultsFiles: "**/surefire-reports/TEST-*.xml"
          goals: package --non-recursive -Dmaven.test.skip=true
      - task: GitHubRelease@0
        inputs:
          ${{ if eq(variables['Build.SourceBranchName'], 'develop') }}:
            gitHubConnection: github.com_jflamy-dev
            repositoryName: jflamy-dev/owlcms4-prerelease
            isPreRelease: true
          ${{ if eq(variables['Build.SourceBranchName'], 'master') }}:
            gitHubConnection: jflamy
            repositoryName: owlcms/owlcms4
            isPreRelease: false
          action: "create" # Options: create, edit, delete
          #target: $(Revision) # Required when action == Create || Action == Edit
          tagSource: "manual"
          tag: $(Revision)
          releaseNotesSource: "file"
          releaseNotesFile: $(Build.SourcesDirectory)/ReleaseNotes.md # Optional
          assets: |
            $(Pipeline.Workspace)/OwlcmsZip/*
            $(Pipeline.Workspace)/PublicResultsZip/*
            $(Pipeline.Workspace)/OwlcmsSetup/*
            $(Pipeline.Workspace)/PublicResultsSetup/*
          assetUploadMode: "delete" # Optional. Options: delete, replace
          addChangeLog: false # Optional