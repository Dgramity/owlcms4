trigger:
  - develop

variables:
  # revision overrides .mvn config; must be unique if BUILD_GOAL is set to deploy.
  REVISION: 4.7.5-alpha17
  # if BUILD_GOAL = 'deploy', the uberjars will be published on bintray.  'package' does not deploy
  # to bintray, so REVISION can be kept for several runs when debugging the installers.
  BUILD_GOAL: package
  MAVEN_CACHE_FOLDER: $(Pipeline.Workspace)/.m2/repository
  MAVEN_OPTS: -Dmaven.repo.local=$(MAVEN_CACHE_FOLDER) -Dmaven.test.skip=true -Drevision=$(REVISION)

jobs:
  # build owlcms uberjar and zip to be used by installer
  - job: BuildOwlcmsUberJar
    pool:
      vmImage: ubuntu-latest
    steps:
      - template: src/main/azure-pipelines/prepare-maven.yaml
      - task: Maven@3
        displayName: build owlcms uberJar and deploy to bintray
        inputs:
          mavenPomFile: pom.xml
          mavenOptions: -Xmx3072m $(MAVEN_OPTS)
          javaHomeOption: JDKVersion
          jdkVersionOption: "1.8"
          jdkArchitectureOption: x64
          publishJUnitResults: true
          testResultsFiles: "**/surefire-reports/TEST-*.xml"
          goals: -P production -pl owlcms -am $(BUILD_GOAL)
      - publish: $(Agent.BuildDirectory)/s/owlcms/target/owlcms.zip
        artifact: OwlcmsZip

  # build publicresults uberjar and zip to be used by installer
  - job: BuildPublicResultsUberJar
    pool:
      vmImage: ubuntu-latest
    steps:
      - template: src/main/azure-pipelines/prepare-maven.yaml
      - task: Maven@3
        displayName: build publicresults uberJar and deploy to bintray
        inputs:
          mavenPomFile: pom.xml
          mavenOptions: -Xmx3072m $(MAVEN_OPTS)
          javaHomeOption: JDKVersion
          jdkVersionOption: "1.8"
          jdkArchitectureOption: x64
          publishJUnitResults: true
          testResultsFiles: "**/surefire-reports/TEST-*.xml"
          goals: -P production -pl publicresults -am $(BUILD_GOAL)
      - publish: $(Agent.BuildDirectory)/s/publicresults/target/publicresults.zip
        artifact: PublicResultsZip

  - job: CreateWindowsInstallers
    dependsOn:
      - BuildOwlcmsUberJar
      - BuildPublicResultsUberJar
    pool:
      vmImage: windows-latest
    steps:
      - template: src/main/azure-pipelines/prepare-maven.yaml
      - task: Maven@3
        displayName: Create owlcms installer
        inputs:
          mavenPomFile: pom.xml
          mavenOptions: -Xmx3072m $(MAVEN_OPTS)
          javaHomeOption: JDKVersion
          jdkVersionOption: "1.8"
          jdkArchitectureOption: x64
          publishJUnitResults: true
          testResultsFiles: "**/surefire-reports/TEST-*.xml"
          goals: -pl owlcms-windows package
      - task: Maven@3
        displayName: Create publicresults installer
        inputs:
          mavenPomFile: pom.xml
          mavenOptions: -Xmx3072m $(MAVEN_OPTS)
          javaHomeOption: JDKVersion
          jdkVersionOption: "1.8"
          jdkArchitectureOption: x64
          publishJUnitResults: true
          testResultsFiles: "**/surefire-reports/TEST-*.xml"
          goals: -pl publicresults-windows package
      - publish: $(Agent.BuildDirectory)/s/owlcms/target/owlcms_setup/owlcms_setup.exe
        artifact: OwlcmsSetup
      - publish: $(Agent.BuildDirectory)/s/publicresults/target/publicresults_setup/publicresults_setup.exe
        artifact: OwlcmsSetup

  # release the installers to github repositories
  - job: PreReleaseInstallers
    condition: always()
    dependsOn:
      - BuildOwlcmsUberJar
      - BuildPublicResultsUberJar
      - CreateWindowsInstallers
    pool:
      vmImage: ubuntu-latest
    steps:
      - checkout: self
        submodules: recursive
      - download: current
        artifact: OwlcmsZip
      - download: current
        artifact: OwlcmsUberJar
      - script: ls -lr $(Pipeline.Workspace)
      - task: GitHubRelease@0
        inputs:
          gitHubConnection: github.com_jflamy-dev
          #repositoryName: '$(Build.Repository.Name)' 
          action: 'create' # Options: create, edit, delete
          #target: $(REVISION) # Required when action == Create || Action == Edit
          tagSource: 'manual' # Required when action == Create# Options: auto, manual
          #tagPattern: # Optional
          tag: $(REVISION)
          #title: # Optional
          releaseNotesSource: 'file' # Optional. Options: file, input
          releaseNotesFile: ReleaseNotes.md # Optional
          #releaseNotes: # Optional
          assets: '$(Build.ArtifactStagingDirectory)/*' # Optional
          assetUploadMode: 'delete' # Optional. Options: delete, replace
          #isDraft: false # Optional
          isPreRelease: true # Optional
          #addChangeLog: true # Optional
          #compareWith: 'lastFullRelease' # Required when addChangeLog == True. Options: lastFullRelease, lastRelease, lastReleaseByTag
          #releaseTag: # Required when compareWith == LastReleaseByTag
