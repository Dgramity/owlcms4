# Maven
# Build your Java project and run tests with Apache Maven.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java
trigger:
# we use comments on pull requests to trigger the build
- develop
variables:
   MAVEN_CACHE_FOLDER: $(Pipeline.Workspace)/.m2/repository
   MAVEN_OPTS: -Dmaven.repo.local=$(MAVEN_CACHE_FOLDER)
jobs:
-  job: BuildOwlcmsUberJar
#   condition: eq(1,2)
   pool:
      vmImage: ubuntu-latest
   steps:
   -  template: src/main/azure-pipelines/prepare-maven.yaml
   -  task: Maven@3
      displayName: build owlcms uberJar and deploy to bintray
      inputs:
         mavenPomFile: pom.xml
         mavenOptions: -Xmx3072m $(MAVEN_OPTS)
         javaHomeOption: JDKVersion
         jdkVersionOption: '1.8'
         jdkArchitectureOption: x64
         publishJUnitResults: true
         testResultsFiles: '**/surefire-reports/TEST-*.xml'
         goals: -P production,noInstaller -pl owlcms -am deploy
-  job: BuildPublicResultsUberJar
#   condition: eq(1,2)
   pool:
      vmImage: ubuntu-latest
   steps:
   -  template: src/main/azure-pipelines/prepare-maven.yaml
   -  task: Maven@3
      displayName: build publicresults uberJar and deploy to bintray
      inputs:
         mavenPomFile: pom.xml
         mavenOptions: -Xmx3072m $(MAVEN_OPTS)
         javaHomeOption: JDKVersion
         jdkVersionOption: '1.8'
         jdkArchitectureOption: x64
         publishJUnitResults: true
         testResultsFiles: '**/surefire-reports/TEST-*.xml'
         goals: -P production,noInstaller -pl publicresults -am deploy
-  job: CreateWindowsInstallers
   dependsOn:
   - BuildOwlcmsUberJar
   - BuildPublicResultsUberJar
   pool:
      vmImage: windows-latest
   steps:
   -  template: src/main/azure-pipelines/prepare-maven.yaml
   -  task: Maven@3
      displayName: Create Windows Installers
      inputs:
         mavenPomFile: pom.xml
         mavenOptions: -Xmx3072m $(MAVEN_OPTS)
         javaHomeOption: JDKVersion
         jdkVersionOption: '1.8'
         jdkArchitectureOption: x64
         publishJUnitResults: true
         testResultsFiles: '**/surefire-reports/TEST-*.xml'
         goals: -P production -pl windows-installer package